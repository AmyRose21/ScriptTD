--[[
    Script: Velocidad Adicional para "Tails" al Reproducir una Animación Específica
    Versión con dos animaciones específicas

    Cambios y comentarios:

    - Se agregó la variable SPECIFIC_ANIMATION_ID_2 para definir un segundo AnimationId.
    - Se modificó la condición en la que se aplica el boost de velocidad para aceptar cualquiera de los dos AnimationId.
    - Se agregaron comentarios explicativos en el código para clarificar cada cambio realizado.
    - Se conserva la verificación del personaje asegurándose de que sea "tails" (comparación en minúsculas) antes de aplicar el boost.
    - Se utiliza la bandera 'boostActive' para evitar que se apliquen múltiples boosts simultáneos.
]]--

-- Obtención de servicios necesarios en Roblox
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Se obtiene al jugador local
local player = Players.LocalPlayer

-- Se espera a que exista la carpeta "displayPlayers" en ReplicatedStorage
local displayPlayers = ReplicatedStorage:WaitForChild("displayPlayers")

-- Se obtienen las estadísticas del jugador a partir del nombre del jugador local
local playerStats = displayPlayers:WaitForChild(player.Name):WaitForChild("stats")

-- Se obtiene el ValueObject que contiene el nombre del personaje
local characterValue = playerStats:WaitForChild("character")

-- Función que verifica si el personaje del jugador es "tails"
local function UsoTailsmejoras()
    -- Convertimos el valor a cadena y lo pasamos a minúsculas para normalizar la comparación
    local charName = tostring(characterValue.Value):lower()
    return charName == "tails"
end

-- Parámetros configurables:
local SPECIFIC_ANIMATION_ID = "rbxassetid://137942626999528"  -- ID de la primera animación específica (actualizable si es necesario)
local SPECIFIC_ANIMATION_ID_2 = "rbxassetid://136705072136812"  -- ID de la segunda animación específica (nuevo, actualizable si es necesario)
local SPEED_BOOST_AMOUNT = 18      -- Cantidad extra de velocidad que se le añade al humanoide
local BOOST_DURATION = 10          -- Duración en segundos del efecto de velocidad adicional

local boostActive = false  -- Bandera para evitar que se apliquen múltiples boosts simultáneos

-- Espera a que el Character del jugador esté cargado y se obtenga el Humanoid
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Conexión al evento que se dispara cada vez que se reproduce una animación en el Humanoid
humanoid.AnimationPlayed:Connect(function(animationTrack)
    local animationObject = animationTrack.Animation

    -- Se obtienen el nombre y el ID de la animación; si no están definidos se usan valores por defecto
    local animName = animationObject.Name or "Desconocido"
    local animID = animationObject.AnimationId or "Sin ID"

    -- Se imprime en la consola el nombre y el ID de la animación reproducida
    print("Animación reproducida: " .. animName .. " (" .. animID .. ")")

    -- Verifica que el personaje es "tails" y que la animación reproducida es una de las que activan el efecto
    -- Cambio realizado: se agregó la verificación para incluir la segunda AnimationId (SPECIFIC_ANIMATION_ID_2)
    if UsoTailsmejoras() and (animID == SPECIFIC_ANIMATION_ID or animID == SPECIFIC_ANIMATION_ID_2) then
        print("Detectada animación específica para Tails. Aplicando efecto de velocidad adicional.")

        -- Verifica que el boost no esté ya activo para evitar duplicados o acumulaciones de efectos
        if not boostActive then
            boostActive = true  -- Se marca que el boost está activo
            local originalSpeed = humanoid.WalkSpeed  -- Se guarda la velocidad original del humanoide

            -- Se aplica el boost de velocidad sumando la cantidad extra configurada
            humanoid.WalkSpeed = originalSpeed + SPEED_BOOST_AMOUNT

            -- Utiliza task.delay para esperar BOOST_DURATION segundos antes de revertir el efecto
            task.delay(BOOST_DURATION, function()
                humanoid.WalkSpeed = originalSpeed  -- Se restablece la velocidad original
                boostActive = false  -- Se desbloquea el boost para permitir futuros efectos
                print("Efecto de velocidad adicional terminado.")
            end)
        end
    end
end)